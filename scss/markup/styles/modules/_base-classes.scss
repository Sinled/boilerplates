// # Project global base classes
// %clearfix - clearfix base class
//		@extend %clearfix;
%clearfix {
	@if $legacy-support-for-ie {
		*zoom: 1;
	}

	&:after {
		content: '';
		display:table;
		clear: both;
	}
}

// # %button-reset - button reset base class
//	 @extend %button-reset;
%button-reset {
	@include inline-block(middle);
	box-sizing: content-box;
	outline: none;
	border: none;
	position: relative;
	background: none;
	overflow: visible;
	padding: 0;
	margin: 0;
	color: $base-color;
	cursor: pointer;
	text-align: center;
	text-decoration: none;
}

// # %button - button base class
//	 @extend %button;
%button {
	@extend %button-reset;
}

// # %input-text - input reset base class
//	 @extend %input-text;
%input-text {
	overflow: hidden;

	@include text-inputs {
		box-sizing: border-box;
		margin: 0;
		padding: 5px;
		background: none;
		border: none;
		width: 100%;
		display: block;
		outline: none;
		color: $base-color;
	}
}

// # %fixed-bg - input reset base class
//	 @extend %fixed-bg;
%fixed-bg {
	@include hide-text(left);
	position: absolute;
	left: 0;
	bottom: 0;
	margin: 0;
	width: 100%;
	height: 100%;
	background-attachment: fixed;
	background-repeat: no-repeat;
}

// # %flex-image - Flexible image base class
//	 @extend %flex-image;
%flex-image {
	display: block;
	height: auto;
}

// # %flex-image-container - Flexible container with image base class
//	 @extend %flex-image;
%flex-image-container {
	> img {
		display: block;
		width: 100%;
		height: auto;
	}
}

// # %opacity-panel - Style for opacity panel
//	 @extend %opacity-panel;
%opacity-panel {
	background: rgba(#000, .75);
}


// # Removes bottom margin from last child in container
//	 @extend %no-last-bmargin
%no-last-bmargin {
	> *:last-child {
		margin-bottom: 0;
	}
}

// # Removes bottom margin from last child in container
//	 @extend %no-last-rmargin
%no-last-rmargin {
	> *:last-child {
		margin-right: 0;
	}
}


// # Save oferflowed text
//	 @extend %overflowed-text
%overflowed-text {
	overflow: hidden;
	text-overflow: ellipsis;
}

// # Position element in middle of parent
//	 @extend %v-centered
%v-centered {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
}

// # Position element in middle of parent
//	 @extend %h-centered
%h-centered {
	position: absolute;
	left: 50%;
	transform: translateX(-50%);
}

// # Position element in middle of parent
//	 @extend %hv-centered
%hv-centered {
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
}

// # Position element in middle of parent
//	 @extend %hv-centered
%parent-stretched {
	position: absolute;
	left: 0;
	top: 0;
	bottom: 0;
	right: 0;
}

// # Stripped bg for even elements
//	 @extend %hv-centered
%stripped-bg-even {
	&:nth-child(even) {
		background: rgba(#000, .6);
	}

	@media screen and ($brpoint-tablet-start) and ($brpoint-tablet-end) {
		&:nth-child(even) {
			background: rgba(#000, .6);
		}
	}
}

// # Stripped bg for odd elements
//	 @extend %hv-centered
%stripped-bg-odd {
	&:nth-child(odd) {
		background: rgba(#000, .6);
	}

	@media screen and ($brpoint-tablet-start) and ($brpoint-tablet-end) {
		&:nth-child(odd) {
			background: rgba(#000, .6);
		}
	}
}

